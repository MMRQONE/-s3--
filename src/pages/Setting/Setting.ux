<template>
	<div class="page">
			<text ></text>
			<text class="title">刷新间隔：{{ sliderValue }}秒</text>
			<slider class="slider" min="1" max="10" step="1" value="{{ initialSliderValue }}" onchange="onSliderChange"></slider>
			<div >
				<image style="width: 230px;height:230px" src="/common/zanshan.jpg" />
			</div>
	</div>
</template>

<script>
import prompt from "@system.prompt";
import file from "@system.file";
export default {
	private: {
		list: [
		],
		initialSliderValue: 5,
    	sliderValue: 5
	},
	onSliderChange (e) {
		console.log(e)
		this.$app.$def.timetime=e.progress
    	this.sliderValue = e.progress
		this.SaveToText(e.progress)
  	},
	onInit() {
		var that=this
		this.readToText().then(res=>{
			that.initialSliderValue=res
			that.sliderValue=res
		})
		console.info("初始化");
	},
	onShow() {
	},
	SaveToText(str){
		//写文本到文件
		file.writeText({
			uri: "internal://mass/setting.txt",
			text:str+"",
			append:false,
			success: function () {
			},
			fail: function (data, code) {
				prompt.showToast({
					message: `设置失败, data=${data},code = ${code}`,
					duration: 1000,
				});
			},
		});
	},
	readToText() {
		return new Promise((resolve, reject) => {
			file.readText({
				uri: "internal://mass/setting.txt",
				success: function (data) {
					resolve(data.text)
				},
				fail: function (data, code) {
					reject('读取自选股失败')
				},
			});
		})
	},
};
</script>

<style>
.page {
	/* 交叉轴居中 */
	align-items: center;
	/* 纵向排列 */
	flex-direction: column;
	background-color: #000000;
	border-radius: 240px;
}
.title {
    font-weight: bold;
  }

  .slider {
    margin-top: 20px;
    margin-bottom: 20px;
    padding-left: 0;
    padding-right: 0;
  }
</style>